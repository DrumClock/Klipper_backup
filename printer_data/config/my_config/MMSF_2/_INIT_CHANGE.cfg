#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_change: { }   

# e.g. change = {'loaded': None/0,1,2,3..., 
#                'position': [240, 240],
#                'feedrate': {'move': 30000},
#                'end_stop': {'park': 50, 'switch': 40, 'out':80, 'speed': 40} 
 

#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################
  
[gcode_macro _INIT_CHANGE_MATERIAL]
gcode:

     {% set user_vars = printer["gcode_macro VARIABLE"] %}
     {% set recovery = printer.save_variables.variables %}
     
     {% set name = "change" %}    # name variable   
     {% set init = user_vars[name] %}     # default preset 
     
     
     ## User define variable - position[X,Y], feedrate, speed .....
     {% set _dummy = init.update({ 'loaded': None if user_vars.active.material == None else user_vars.active.material|int })  %}
     {% set _dummy = init.update({ 'position': [240, 1] })  %}
     {% set _dummy = init.update({ 'feedrate': {'move': 30000} })  %}
          
     ## User define variable 'end_stop' 
     ## info picture: toolhead_4-in-1.png
     # 'park'  =   distance between park position and  end_stop switch
     # 'switch' =  distance between end_stop switch and position when filament is outside extruder
     # 'out' =     distance between end of filament (nozzle, heatbreak, cutting) and position when filament is outside extruder 
     {% set _dummy = init.update({ 'end_stop': {'park': 20, 'switch': 30, 'out':55, 'speed': 20} })  %}
     
     
      SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
      #{action_respond_info("%s = %s" % (name,init))}      
      {action_respond_info("Creating a list of Change variables ") if printer.save_variables.variables.dump_list}
      