#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_active: { }  

# e.g. {'material': 0, 'count':4, 'z':{ 'hop':2.0, 'restore': 0.0, 'layer_z':0.0 }


#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _A_INIT_ACTIVE]
gcode:

     {% set user_vars = printer["gcode_macro VARIABLE"] %}  
     {% set recovery = printer.save_variables.variables %}
     
     {% set name = "active" %}    # name variable   
     {% set init = user_vars[name] %}     # default preset   
     
     {% set _dummy = init.update({'material': None, 'count':0, 'z':{ 'hop':2.0, 'restore': 0.0, 'layer_z':0.0 } }) %} 


      ### restore variable from SD card     
      {% if name in recovery %}
       {action_respond_info("Restore loaded materialr after restart from SD card.") if printer.save_variables.variables.dump_list}  
        {% set _dummy = init.update( {'material': recovery[name].material } )  %}
      {% endif %}
  
        SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"
    
       {action_respond_info("Creating a list of active variable") if printer.save_variables.variables.dump_list} 


#####################################################################
# Multi Material - Switching Filament (MMSF) MANAGEMENT
# Function description: 
#####################################################################   
      
[gcode_macro T0]
gcode: 
  DEFINE_MATERIAL  T=0
           
[gcode_macro T1]
gcode: 
  DEFINE_MATERIAL  T=1
 
[gcode_macro T2]
gcode: 
  DEFINE_MATERIAL  T=2
          
[gcode_macro T3]
gcode: 
  DEFINE_MATERIAL  T=3 	  

[gcode_macro T4]
gcode: 
  DEFINE_MATERIAL  T=4 	  

[gcode_macro T5]
gcode: 
  DEFINE_MATERIAL  T=5 	 

  
##################################################################### 
[gcode_macro DEFINE_MATERIAL]
description: Define the material for G-code 'Txx'.
gcode:
   
    ### params.T = [0|1|2|3]
    
    # active = { 'material': 0, 'count':4, }
        
      {% set user_vars = printer["gcode_macro VARIABLE"] %}
      {% set name = "active" %}    # name variable   
      {% set init = user_vars[name] %}     # default preset  
       
      {% set target_material = params.T|default(0)|int %} 
      {% set last_material = init.material if init.material != None else 0 %}
      
     {% if init.count  <  target_material + 1 %}
        ### ignore G-code Tx command if not defined material
         {action_respond_info("The T%s is not defined for material." % (target_material))} 
     {% else %} 

     {% if target_material != init.material %}
             SAVE_GCODE_STATE name=DEFINE_MATERIAL  
    
        ### z-hop before action, only when printing
        {% if  printer['virtual_sdcard'].is_active %}
          
           # ------- ozzing prevent ---------------------- 
           {% set act_extr =printer['toolhead'].extruder %}       
             {% if printer[(act_extr)].can_extrude | lower == 'true' %}
              G92 E0                
              G1 E-5 F360               
            {% endif %}             
            Z_HOP  
            SAVE_GCODE_STATE name=Z_HOP 
         {% endif %}            
       
        ###########################  UNLOAD  ##############################
     
           # -------  filament switch in splitter ----------------------        
          {% if 'gcode_macro SAFETY_SPLITTER_SWITCH' in printer  %}
                  SAFETY_SPLITTER_SWITCH          
                    
               {% if  user_vars.active.splitter == 'full' %}     # flinament is loaded   
               
                    # ------- cutting or unload shaping material ----------------------      
                     {% if 'gcode_macro CUTTING_MATERIAL' in printer   %}
          #              CUTTING_MATERIAL
                     {% elif  'gcode_macro SHAPING_SEQUENCE' in printer  %}
          #               SHAPING_SEQUENCE
                     {% endif %}  
                  
                   # ------- switching active material ------------------               
                     {% if 'gcode_macro SWITCHING_MATERIAL' in printer  %} 
                        SWITCHING_MATERIAL    T={last_material}
                     {% endif %}                             
                 
                    # ------- unload active material ----------------------  
                      {% if 'gcode_macro UNLOAD_SEQENCE' in printer  %}
                         UNLOAD_SEQENCE
                      {% endif %}                

                {% endif %} 
                    
           
      ###########################  LOAD  ##############################
      
         # ------- filament switch in splitter ----------------------        
                SAFETY_SPLITTER_SWITCH                                    
         
                     # ------- switching target material ------------------               
                     {% if 'gcode_macro SWITCHING_MATERIAL' in printer  %} 
                        SWITCHING_MATERIAL    T={target_material}
                     {% endif %}              
      
                     # -------- load target material -------------------- 
                     {% if 'gcode_macro LOAD_SEQENCE' in printer  %}
                       LOAD_SEQENCE
                     {% endif %}    

                   
                     M117 Exchange Complet
                     {% if 'delayed_gcode clear_display' is defined %}
                       UPDATE_DELAYED_GCODE ID=clear_display DURATION=3    ; clear display after 3 sec.
                     {% endif %}                    

                 DISABLE_SWITCHING_MATERIAL
                 
         {% else %}     
             RESPOND MSG="Not defined splitter switch for multimaterial print."  
         {% endif %} 
           
      ################################################################## 
      
           {% if  printer['virtual_sdcard'].is_active %}
             RESTORE_GCODE_STATE name=Z_HOP MOVE=1                 
           {% endif %} 
             RESTORE_GCODE_STATE name=DEFINE_MATERIAL MOVE=1
          
     {% else %}  
        {action_respond_info("The T%s for the material is already set." % (target_material))} 
     {% endif %}   
  {% endif %}    				   
 