[gcode_macro LOAD_SEQENCE]  
description:
gcode:             

        {% set user_vars = printer["gcode_macro VARIABLE"] %} 
        {% set name = "change" %}    # name variable   
        {% set init = user_vars[name] %}     # default preset
             
        {% set act_extruder = printer.toolhead.extruder %}          
        
 
 {% if printer[act_extruder].can_extrude | lower == 'true' %}
      {% if  user_vars.active.splitter == 'empty' %}   # flinament is unloaded 
         RESPOND MSG="Load material - "{user_vars.active.material+1}     
         SAVE_GCODE_STATE NAME=LOAD_SEQ
                  
          ###  if Homing 
           {% if "xyz" in printer.toolhead.homed_axes %} 
              ### set X,Y position for change material
              G1 X{init.position[0]} G1 Y{init.position[1]} F{init.feedrate.move}                 
           {% endif  %}   
          
          {% set target_material = user_vars.active.material|int %}  
          {% set man_stepper =  user_vars.switching[target_material].index %}  
          {% set rotation  =  user_vars.switching[target_material].rotation %}  

          ### Example :{'park': 50, 'switch': 40, 'out':80, 'speed': 30}
          ### info picture: toolhead_4-in-1.png      
          {% set park  = init.end_stop.park|int %}      ; distance between park position and  end_stop switch
          {% set switch  = init.end_stop.switch|int %}  ; distance between end_stop switch and position when filament is outside extruder
          {% set out  = init.end_stop.out|int %}        ; distance between end of filament (nozzle, heatbreak, cutting) and position when filament is outside extruder    
          {% set speed  = init.end_stop.speed|int %}    ; load/unload speed in mm/s

          ### define max extrude steps
          {% set max_extrude = printer.configfile.settings[(act_extruder)].max_extrude_only_distance|int %}   
          
          ### LOAD FILAMENT ### 
        
          {% set step = (switch + out) // max_extrude|int %}
          {% set rest = (switch + out) % max_extrude|float %} 
          
          ### load filament to end_stop switch             
           MANUAL_STEPPER STEPPER={man_stepper}  SET_POSITION=0  MOVE={(park + 15 )* rotation}  SPEED={speed}  STOP_ON_ENDSTOP=-2
            
          ### load filament to extruder            
           MANUAL_STEPPER STEPPER={man_stepper}  SET_POSITION=0  MOVE={(switch + out) * rotation}  SPEED={speed}  SYNC=0
           
           M83
           G92 E0                
           {% for n in range(step) %}
             G1 E{max_extrude} F{speed*60} 
           {% endfor %}	
           {% if rest > 0.0 %}
              G1 E{rest } F{speed*60}
           {% endif %}  
           M400           
                                                
          RESTORE_GCODE_STATE NAME=LOAD_SEQ   #MOVE=1   

          ### update and save variable switching - 'loaded'
          {% set _dummy =init.update( {'loaded':  user_vars.switching.last_material } )   %}   
            SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name}  VALUE="{init}" 
            SAVE_VARIABLE VARIABLE={name} VALUE="{init}"            

          ### update and save variable active - 'material'
         {% set name1 = "active" %} 
         {% set init1 = user_vars[name1] %}    
		
         {% set _dummy =init1.update( {'material':  user_vars.switching.last_material } )   %}   
           SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name1}  VALUE="{init1}" 
           SAVE_VARIABLE VARIABLE={name1} VALUE="{init1}"            
              
         {% else %}
           RESPOND TYPE="error" MSG="For load material must be splitter empty !"     
           SET_BEEPER P=250  
#           PAUSE
         {% endif %}   
         
       {% else %}
          RESPOND TYPE="error" MSG="For load material must be extruder heated !"       
       {% endif %}           
       


     